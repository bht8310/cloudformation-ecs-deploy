version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      ## ECRにログイン
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
 
      ## Dockerイメージのタグとして使用するため、Gitのコミットハッシュを取得
      - IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
  build:
    commands:
      ## Dockerイメージのビルド
      - docker build -t $IMAGE_REPOSITORY_NAME:$IMAGE_TAG -f $DOCKERFILE .
      - docker tag $IMAGE_REPOSITORY_NAME:$IMAGE_TAG $IMAGE_REPOSITORY_NAME:latest
 
      ## DockerイメージのECRへのプッシュ
      - docker push $IMAGE_REPOSITORY_NAME:$IMAGE_TAG
      - docker push $IMAGE_REPOSITORY_NAME:latest
 
      ## ECS+CodeDeployにどのイメージを使用するか指示するためのファイルを作成
      - printf '{"ImageURI":"%s"}' $IMAGE_REPOSITORY_NAME:$IMAGE_TAG > imageDetail.json
      - printf '[{"name":"%s","imageUri":"%s"}]' "$ECS_APP_CONTAINER" $IMAGE_REPOSITORY_NAME:$IMAGE_TAG > imagedefinitions.json

      - sed "s/%%AccountID%%/$ACCOUNT_ID/" template_taskdefweb.json | sed "s/%%executionRole%%/$EXECUTION_ROLE/" | sed "s/%%containerName%%/$ECS_WEB_CONTAINER/" | sed "s/%%familyName%%/$ECS_WEB_FAMILY/"  > taskdefweb.json
      - sed "s/%%containerName%%/$ECS_WEB_CONTAINER/" template_appspecweb.yaml > appspecweb.yaml
artifacts:
  files: 
    - imageDetail.json
    - imagedefinitions.json
    - taskdefweb.json
    - appspecweb.yaml